{"version":3,"sources":["context/SettingsContext.js","components/Button.js","components/SetPomodoro.js","logo.svg","components/CountdownAnimation.js","App.js","index.js"],"names":["SettingsContext","createContext","SettingsContextProvider","props","useState","pomodoro","setPomodoro","key","setKey","executing","setExecuting","startAnimate","setStartAnimate","updateExecute","updatedSettings","setTimerTime","evaluate","active","work","rest","Provider","value","startTimer","console","log","pauseTimer","children","remainingTime","hours","Math","floor","minutes","seconds","SettingBtn","setCurrentTimer","active_state","stopAnimate","Button","title","activeClass","_callback","className","onClick","style","cursor","showAnimate","keyframes","Div","styled","div","SetPomodoro","useContext","newTimer","setNewTimer","handleChange","input","target","name","valueNanToZero","parseInt","handleSubmit","e","preventDefault","noValidate","onSubmit","htmlFor","onChange","id","CountdownAnimation","timer","animate","isPlaying","size","duration","colors","strokeWidth","trailColor","onComplete","Splash","Small","small","App","useEffect","undefined","src","logo","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb779662.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const SettingsContext = createContext();\r\n\r\nfunction SettingsContextProvider(props) {\r\n  const [pomodoro, setPomodoro] = useState(0);\r\n  const [key, setKey] = useState(0);\r\n  const [executing, setExecuting] = useState({});\r\n  const [startAnimate, setStartAnimate] = useState(false);\r\n\r\n  function setCurrentTimer(active_state) {\r\n    updateExecute({\r\n      ...executing,\r\n      active: active_state,\r\n    });\r\n    setTimerTime(executing);\r\n  }\r\n\r\n  // start animation\r\n  function startTimer() {\r\n    setStartAnimate(true);\r\n    console.log(\"key222222222::::\", key);\r\n  }\r\n  // pause animation fn\r\n  function pauseTimer() {\r\n    setStartAnimate(false);\r\n    console.log(\"key111111111::::\", key);\r\n  }\r\n\r\n  const children = ({ remainingTime }) => {\r\n    let hours = Math.floor(remainingTime / 3600);\r\n    let minutes = Math.floor((remainingTime % 3600) / 60);\r\n    let seconds = remainingTime % 60;\r\n    hours = hours < 10 ? `0${hours}` : hours;\r\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n    seconds = seconds < 10 ? `0${seconds}` : seconds;\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  const SettingBtn = () => {\r\n    setExecuting({});\r\n    setPomodoro(0);\r\n  };\r\n\r\n  //실행\r\n  const updateExecute = (updatedSettings) => {\r\n    setExecuting(updatedSettings);\r\n    setTimerTime(updatedSettings);\r\n  };\r\n\r\n  const setTimerTime = (evaluate) => {\r\n    switch (evaluate.active) {\r\n      case \"work\":\r\n        setKey(0);\r\n        setPomodoro(evaluate.work);\r\n\r\n        break;\r\n      case \"rest\":\r\n        setKey(1);\r\n        setPomodoro(evaluate.rest);\r\n        break;\r\n      default:\r\n        setPomodoro(0);\r\n        break;\r\n    }\r\n  };\r\n\r\n  function stopAnimate() {\r\n    setStartAnimate(false);\r\n  }\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        pomodoro,\r\n        executing,\r\n        updateExecute,\r\n        startAnimate,\r\n        startTimer,\r\n        pauseTimer,\r\n        children,\r\n        SettingBtn,\r\n        setCurrentTimer,\r\n        stopAnimate,\r\n        key,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SettingsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default SettingsContextProvider;\r\n","const Button = ({ title, activeClass, _callback }) => {\r\n  return (\r\n    <button\r\n      className={activeClass}\r\n      onClick={_callback}\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { SettingsContext } from \"../context/SettingsContext\";\r\nimport Button from \"./Button\";\r\n\r\nconst showAnimate = keyframes`\r\n    0% {\r\n      opacity: 0;\r\n      \r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: translateY(-150px);\r\n    }\r\n  `;\r\n\r\nconst Div = styled.div`\r\n  opacity: 0;\r\n  animation: ${showAnimate} 1s infinite;\r\n  animation-iteration-count: 1;\r\n  animation-delay: 3s;\r\n  animation-fill-mode: forwards;\r\n`;\r\n\r\nconst SetPomodoro = () => {\r\n  const { updateExecute } = useContext(SettingsContext);\r\n  const [newTimer, setNewTimer] = useState({\r\n    //default value\r\n    work: 0, //0 second\r\n    rest: 0,\r\n    active: \"work\",\r\n  });\r\n\r\n  const handleChange = (input) => {\r\n    const { name, value } = input.target;\r\n    let valueNanToZero = value || 0;\r\n    switch (name) {\r\n      case \"work\":\r\n        setNewTimer({\r\n          ...newTimer,\r\n          work: parseInt(valueNanToZero),\r\n        });\r\n        break;\r\n      case \"rest\":\r\n        setNewTimer({\r\n          ...newTimer,\r\n          rest: parseInt(valueNanToZero),\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateExecute(newTimer);\r\n  };\r\n  return (\r\n    <Div className=\"form-container\">\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"input-wrapper\">\r\n          <label htmlFor=\"work\">\r\n            집중시간\r\n            <input\r\n              className=\"input\"\r\n              name=\"work\"\r\n              onChange={handleChange}\r\n              value={newTimer.work}\r\n              id=\"work\"\r\n            />\r\n            분\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <lable htmlFor=\"rest\">\r\n            휴식시간\r\n            <input\r\n              className=\"input\"\r\n              name=\"rest\"\r\n              onChange={handleChange}\r\n              value={newTimer.rest}\r\n              id=\"rest\"\r\n            />\r\n            분\r\n          </lable>\r\n        </div>\r\n        <Button title=\"Set Timer\" _callback={handleSubmit} />\r\n      </form>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default SetPomodoro;\r\n","export default __webpack_public_path__ + \"static/media/logo.a501d266.svg\";","import { useContext } from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport { SettingsContext } from \"../context/SettingsContext\";\r\n\r\nconst CountdownAnimation = ({ key, timer, animate, children }) => {\r\n  const { stopAnimate } = useContext(SettingsContext);\r\n\r\n  return (\r\n    <CountdownCircleTimer\r\n      key={key}\r\n      isPlaying={animate}\r\n      size={260}\r\n      duration={timer * 60}\r\n      colors={[\r\n        [\"#23049D\", 0.3],\r\n        [\"#AA2EE6\", 0.3],\r\n        [\"#FF79CD\", 0.3],\r\n        [\"#FFDF6B\", 0.3],\r\n      ]}\r\n      strokeWidth={64}\r\n      trailColor=\"#eeeeee\"\r\n      onComplete={() => {\r\n        stopAnimate();\r\n      }}\r\n    >\r\n      {children}\r\n    </CountdownCircleTimer>\r\n  );\r\n};\r\n\r\nexport default CountdownAnimation;\r\n","import { useContext, useEffect } from \"react\";\r\nimport SetPomodoro from \"./components/SetPomodoro\";\r\nimport logo from \"./logo.svg\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { SettingsContext } from \"./context/SettingsContext\";\r\nimport Button from \"./components/Button\";\r\nimport CountdownAnimation from \"./components/CountdownAnimation\";\r\n\r\nconst showAnimate = keyframes`\r\n    0% {\r\n      opacity: 1;\r\n    }\r\n    100% {\r\n      opacity: 0;\r\n    }\r\n  `;\r\n\r\nconst Splash = styled.div`\r\n  transform: translateY(50%);\r\n  animation: ${showAnimate} ease-in-out 1s infinite;\r\n  animation-iteration-count: 1;\r\n  animation-delay: 1.5s;\r\n  animation-fill-mode: forwards;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Small = styled.small`\r\n  font-size: 1rem;\r\n  padding: 30px 0px 0px 0px;\r\n  margin-bottom: -15px;\r\n  display: block;\r\n`;\r\n\r\nconst App = () => {\r\n  const {\r\n    pomodoro,\r\n    executing,\r\n    setCurrentTimer,\r\n    SettingBtn,\r\n    children,\r\n    startAnimate,\r\n    startTimer,\r\n    updateExecute,\r\n    pauseTimer,\r\n    key,\r\n  } = useContext(SettingsContext);\r\n\r\n  useEffect(() => {\r\n    updateExecute(executing);\r\n  }, [executing, startAnimate]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {pomodoro !== 0 ? (\r\n        <>\r\n          <div className=\"labels\">\r\n            <Button\r\n              title=\"Work\"\r\n              activeClass={\r\n                executing.active === \"work\" ? \"active-label\" : undefined\r\n              }\r\n              _callback={() => setCurrentTimer(\"work\")}\r\n            />\r\n\r\n            <Button\r\n              title=\"rest\"\r\n              activeClass={\r\n                executing.active === \"rest\" ? \"active-label\" : undefined\r\n              }\r\n              _callback={() => setCurrentTimer(\"rest\")}\r\n            />\r\n          </div>\r\n          <Button title=\"Settings\" _callback={SettingBtn} />\r\n\r\n          <div className=\"time-container\">\r\n            <div className=\"time-wrapper\">\r\n              <div className=\"time-spot\"></div>\r\n              <div className=\"time-spot\">\r\n                <span></span>\r\n              </div>\r\n              <div className=\"time-spot\"></div>\r\n              <div className=\"time-spot\">\r\n                <span></span>\r\n              </div>\r\n              <CountdownAnimation\r\n                key={key}\r\n                timer={pomodoro}\r\n                animate={startAnimate}\r\n              >\r\n                {children}\r\n              </CountdownAnimation>\r\n              <div className=\"time-spot\">\r\n                <span></span>\r\n              </div>\r\n              <div className=\"time-spot\"></div>\r\n              <div className=\"time-spot\">\r\n                <span></span>\r\n              </div>\r\n              <div className=\"time-spot\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"button-wrapper\">\r\n            <Button title=\"Start\" _callback={startTimer} />\r\n            <Button title=\"Pause\" _callback={pauseTimer} />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Splash>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <Small>집중하고 싶은 사람들을 위한</Small>\r\n            <h1>Round-Timer</h1>\r\n          </Splash>\r\n          <SetPomodoro />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport SettingsContextProvider from \"./context/SettingsContext\";\r\n\r\nReactDOM.render(\r\n  <SettingsContextProvider>\r\n    <App />\r\n  </SettingsContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}